/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { L2_AmmWrapper, L2_AmmWrapperInterface } from "../L2_AmmWrapper.js";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract L2_Bridge",
        name: "_bridge",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_l2CanonicalToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_l2CanonicalTokenIsEth",
        type: "bool",
      },
      {
        internalType: "contract IERC20",
        name: "_hToken",
        type: "address",
      },
      {
        internalType: "contract Swap",
        name: "_exchangeAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "attemptSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "contract L2_Bridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeAddress",
    outputs: [
      {
        internalType: "contract Swap",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2CanonicalToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2CanonicalTokenIsEth",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bonderFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "destinationAmountOutMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "destinationDeadline",
        type: "uint256",
      },
    ],
    name: "swapAndSend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

export class L2_AmmWrapper__factory {
  static readonly abi = _abi;
  static createInterface(): L2_AmmWrapperInterface {
    return new utils.Interface(_abi) as L2_AmmWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L2_AmmWrapper {
    return new Contract(address, _abi, signerOrProvider) as L2_AmmWrapper;
  }
}
