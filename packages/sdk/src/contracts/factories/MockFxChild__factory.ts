/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { MockFxChild, MockFxChildInterface } from "../MockFxChild.js";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "rootMessageSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "NewFxMessage",
    type: "event",
  },
  {
    inputs: [],
    name: "fxRoot",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2Messenger",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onStateReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxRoot",
        type: "address",
      },
    ],
    name: "setFxRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l2Messenger",
        type: "address",
      },
    ],
    name: "setL2Messenger",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class MockFxChild__factory {
  static readonly abi = _abi;
  static createInterface(): MockFxChildInterface {
    return new utils.Interface(_abi) as MockFxChildInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockFxChild {
    return new Contract(address, _abi, signerOrProvider) as MockFxChild;
  }
}
